name: Deploy FlappyBÃ–RD.Client to GitHub Pages
on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - name: Install WASM tools
        run: dotnet workload install wasm-tools --ignore-failed-sources
      - name: Locate Client project
        id: locate
        shell: bash
        run: |
          set -e
          CLIENT=$(git ls-files | grep -iE 'Client\.csproj$' | head -n1)
          [ -n "$CLIENT" ] || { echo "No *Client.csproj found"; exit 1; }
          echo "client_csproj=$CLIENT" >> $GITHUB_OUTPUT
          echo "Client: $CLIENT"
      - name: Restore (repo)
        run: dotnet restore
      - name: Publish WASM
        shell: bash
        run: |
          set -e
          CLIENT="${{ steps.locate.outputs.client_csproj }}"
          OUTDIR="build-client"
          dotnet publish "$CLIENT" -c Release -o "$OUTDIR" /p:BlazorEnableCompression=true -v minimal
          mkdir -p "$OUTDIR/wwwroot"
          touch "$OUTDIR/wwwroot/.nojekyll"
      - name: Configure Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: build-client/wwwroot

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
